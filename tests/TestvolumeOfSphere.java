import org.ktu.examples.GeometryCalculator;
import org.junit.rules.ExpectedException;
import org.junit.Rule;
public class TestvolumeOfSphere
{
@Rule
 public final ExpectedException exception = ExpectedException.none();
/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere1() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(-144.19);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere2() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere3() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -218.53591699735773;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(-4.3717678634174995E7, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere4() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere5() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(-338.66);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere6() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere7() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 290.84322897197205;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(1.0305415151217702E8, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere8() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere9() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(-406.28);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere10() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere11() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -309.10702589840463;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(-1.2371297444102426E8, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere12() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere13() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(-16.13);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere14() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere15() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -110.63529778873516;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(-5672437.854984287, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere16() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere17() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(-17.86);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere18() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere19() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 39.769005238731324;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(263464.92316529626, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere20() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere21() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(284.35);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere22() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere23() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -187.12647476046772;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(-2.7446964930512235E7, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere24() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere25() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(5.33);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere26() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere27() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 5.538296856812934;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(711.569477296864, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere28() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere29() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(32.09);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere30() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere31() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 1.4183516039388877;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(11.951993040271276, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere32() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere33() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(-238.99);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere34() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere35() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -283.1258933422954;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(-9.506647442029446E7, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere36() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testVolumeOfSphere37() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.volumeOfSphere(-224.34);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere38() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 4.188790204*radius*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere39() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 106.29124076765498;

		double res = testObject.volumeOfSphere(mca_radius);
		org.junit.Assert.assertEquals(5030151.312942549, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testVolumeOfSphere40() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.volumeOfSphere(mca_radius);
	};

};
