import org.ktu.examples.GeometryCalculator;
import org.junit.rules.ExpectedException;
import org.junit.Rule;
public class TestcircumferenceOfCircle
{
@Rule
 public final ExpectedException exception = ExpectedException.none();
/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle1() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(-349.15);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle2() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle3() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -215.8515950191828;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(146372.79838548411, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle4() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle5() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(236.99);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle6() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle7() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -90.41684713962884;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(25683.166630494787, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle8() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle9() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(-77.99);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle10() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle11() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -285.11500924562495;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(255381.84031132865, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle12() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle13() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(43.59);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle14() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle15() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -18.083485899147973;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(1027.3398988572628, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle16() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle17() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(-193.64);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle18() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle19() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -38.14150381377787;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(4570.308071467728, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle20() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle21() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(150.28);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle22() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle23() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1.93465242693334;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(11.75860377736342, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle24() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle25() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(-292.46);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle26() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle27() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 129.42863908369864;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(52627.243209172615, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle28() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle29() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(-82.39);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle30() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -1;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle31() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -10.912380885460323;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(374.1010126807083, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle32() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle33() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(-75.23);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle34() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle35() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 361.8942712314224;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(411446.40123308764, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle36() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by random generation rule. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle37() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();

		double res = testObject.circumferenceOfCircle(-71.34);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle38() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  post: result = 3.1415926*radius*radius " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle39() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = -211.25340347159414;

		double res = testObject.circumferenceOfCircle(mca_radius);
		org.junit.Assert.assertEquals(140202.99159272466, res, 0.001);
	};

/**
* Auto generated by an OCL generation rule. Checks whether constraint "  pre: radius > 0 " is satisfied. 
*/	@org.junit.Test
	public void testCircumferenceOfCircle40() throws Throwable
	{
		GeometryCalculator testObject = new GeometryCalculator();
		double mca_radius = 0;
		exception.expect(Throwable.class);

		double res = testObject.circumferenceOfCircle(mca_radius);
	};

};
